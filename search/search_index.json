{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Predicting season's wins in NBA Motivation of the project. In this project, we'll be looking at a variety of factors that may influence a team's win total in an NBA season. We'll be using data from previous seasons (32 years of NBA for being exact) to see if we can build a model that accurately predicts a team's season win total. Some of the questions we'll be looking to answer are: What are the most important factors in determining how many games an NBA team will win in a season? Can we predict how many games a team will win in a season based on statistics from previous seasons? What datasets would be most useful in constructing a model to predict a team's season win total? By the end of this project, we should have a good understanding of which factors are most important in determining a team's season win tota by developing multiple models that predicts a team\u2019s win totals based on various data sets. This is a learning project that involves many important aspects of a real life data science project: Gathering data from external sources. Preparing that data and storing it through multiple stages. Making an exploratory data analysis and gathering relevant insights useful for models development. Evaluating and comparing (with the same metrics) multiple models (and algorithms) trained with different features to figure out which dataset can providfe us multiple insights. Improving these models. Documenting the whole process and thinking in project reusability and adding an action for making automatic builds. Operationalizing the project through an API and a webpage. The problem to solve Formal Definition Tom Mitchell\u2019s machine learning formalism looks like this : A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.`` Task ( T ): Predict the number of wins a team will have based on statistics. Experience ( E ): Multiple datasets of basic and advanced stats summarizd for a team's whole season. Performance ( P ): R^2 score to evaluate how much of the data variation is explained by these set of features. Informal Definition Describe the problem as though you were describing it to a friend or colleague. This can provide a great starting point for highlighting areas that you might need to fill. It also provides the basis for a one sentence description you can use to share your understanding of the problem. I want to find the best set of predictors by team season Assumptions We are not only the perfect model but learning how to apply multiple linear regression. In the future, an extension of this project might use other algorithms to predict with more accuracy if needed. We are not counting on data game by game which might add an extra level of detail to our model and conclusions so the expected outcome is a summary of the ideal season base on 3 or 4 predictors and then getting an average per game. There are differences in the number of matches per season across seasons which might affect the performance (this is an assumption that needs to be tested against data) . Similar problems This regression problem can be applied to many other situations where the goal is to predict a numerical value. For example, an analyst might want to know how the movement of the stock market affects the price of ExxonMobil (XOM) stock. In this case, the linear equation would have the value of the S&P 500 index as the independent variable (or predictor) and the price of XOM as the dependent variable. There are a number of factors that affect the outcome of an event - not just one. For example, the price movement of ExxonMobil depends on more than just the performance of the overall market. Other predictors, such as the price of oil, interest rates, and the price movement of oil futures can affect the price of XOM and stock prices of other oil companies. To understand a complex relationship like this, multiple linear regression is used. Multiple linear regression (MLR) is a statistical technique that can be used to figure out the relationships between multiple random variables. In other words, MLR examines how multiple independent variables are related to one dependent variable. Once each of the independent factors has been determined to predict the dependent variable, the information on the multiple variables can be used to create an accurate prediction on the level of effect they have on the outcome variable. The model creates a relationship in the form of a straight line (linear) that best approximates all the individual data points. Usage Project layout \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 Makefile <- Makefile with commands like `make data` or `make train` \u251c\u2500\u2500 README.md <- The top-level README for developers using this project. \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 external <- Data from third party sources. \u2502 \u251c\u2500\u2500 interim <- Intermediate data that has been transformed. \u2502 \u251c\u2500\u2500 processed <- The final, canonical data sets for modeling. \u2502 \u2514\u2500\u2500 raw <- The original, immutable data dump. \u2502 \u251c\u2500\u2500 docs <- Documentation of the project \u2502 \u251c\u2500\u2500 models <- Trained and serialized models, model predictions, or model summaries \u2502 \u251c\u2500\u2500 notebooks <- Jupyter notebooks. \u2502 \u251c\u2500\u2500 references <- Data dictionaries, manuals, and all other explanatory materials. \u2502 \u251c\u2500\u2500 reports <- Generated analysis as HTML, PDF, LaTeX, etc. \u2502 \u251c\u2500\u2500 figures <- Generated graphics and figures to be used in reporting \u2502 \u2514\u2500\u2500 tables <- Samples of data for documentation purposes. \u2502 \u251c\u2500\u2500 requirements.txt <- The requirements file for reproducing the analysis environment, e.g. \u2502 generated with `pip freeze > requirements.txt` \u2502 \u251c\u2500\u2500 setup.py <- makes project pip installable (pip install -e .) so src can be imported \u251c\u2500\u2500 src <- Source code for use in this project. \u2502 \u2502 \u2502 \u251c\u2500\u2500 data <- Scripts to download or generate data \u2502 \u2502 \u2502 \u251c\u2500\u2500 features <- Scripts to turn raw data into features for modeling \u2502 \u2502 \u2502 \u251c\u2500\u2500 models <- Scripts to train models and then use trained models to make predictions \u2502 \u2502 \u2502 \u2514\u2500\u2500 visualization <- Scripts to create exploratory and results oriented visualizations \u2502 \u2514\u2500\u2500 tox.ini <- tox file with settings for running tox; see tox.readthedocs.io","title":"Home"},{"location":"#predicting-seasons-wins-in-nba","text":"","title":"Predicting season's wins in NBA"},{"location":"#motivation-of-the-project","text":"In this project, we'll be looking at a variety of factors that may influence a team's win total in an NBA season. We'll be using data from previous seasons (32 years of NBA for being exact) to see if we can build a model that accurately predicts a team's season win total. Some of the questions we'll be looking to answer are: What are the most important factors in determining how many games an NBA team will win in a season? Can we predict how many games a team will win in a season based on statistics from previous seasons? What datasets would be most useful in constructing a model to predict a team's season win total? By the end of this project, we should have a good understanding of which factors are most important in determining a team's season win tota by developing multiple models that predicts a team\u2019s win totals based on various data sets. This is a learning project that involves many important aspects of a real life data science project: Gathering data from external sources. Preparing that data and storing it through multiple stages. Making an exploratory data analysis and gathering relevant insights useful for models development. Evaluating and comparing (with the same metrics) multiple models (and algorithms) trained with different features to figure out which dataset can providfe us multiple insights. Improving these models. Documenting the whole process and thinking in project reusability and adding an action for making automatic builds. Operationalizing the project through an API and a webpage.","title":"Motivation of the project."},{"location":"#the-problem-to-solve","text":"","title":"The problem to solve"},{"location":"#formal-definition","text":"Tom Mitchell\u2019s machine learning formalism looks like this : A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.`` Task ( T ): Predict the number of wins a team will have based on statistics. Experience ( E ): Multiple datasets of basic and advanced stats summarizd for a team's whole season. Performance ( P ): R^2 score to evaluate how much of the data variation is explained by these set of features.","title":"Formal Definition"},{"location":"#informal-definition","text":"Describe the problem as though you were describing it to a friend or colleague. This can provide a great starting point for highlighting areas that you might need to fill. It also provides the basis for a one sentence description you can use to share your understanding of the problem. I want to find the best set of predictors by team season","title":"Informal Definition"},{"location":"#assumptions","text":"We are not only the perfect model but learning how to apply multiple linear regression. In the future, an extension of this project might use other algorithms to predict with more accuracy if needed. We are not counting on data game by game which might add an extra level of detail to our model and conclusions so the expected outcome is a summary of the ideal season base on 3 or 4 predictors and then getting an average per game. There are differences in the number of matches per season across seasons which might affect the performance (this is an assumption that needs to be tested against data) .","title":"Assumptions"},{"location":"#similar-problems","text":"This regression problem can be applied to many other situations where the goal is to predict a numerical value. For example, an analyst might want to know how the movement of the stock market affects the price of ExxonMobil (XOM) stock. In this case, the linear equation would have the value of the S&P 500 index as the independent variable (or predictor) and the price of XOM as the dependent variable. There are a number of factors that affect the outcome of an event - not just one. For example, the price movement of ExxonMobil depends on more than just the performance of the overall market. Other predictors, such as the price of oil, interest rates, and the price movement of oil futures can affect the price of XOM and stock prices of other oil companies. To understand a complex relationship like this, multiple linear regression is used. Multiple linear regression (MLR) is a statistical technique that can be used to figure out the relationships between multiple random variables. In other words, MLR examines how multiple independent variables are related to one dependent variable. Once each of the independent factors has been determined to predict the dependent variable, the information on the multiple variables can be used to create an accurate prediction on the level of effect they have on the outcome variable. The model creates a relationship in the form of a straight line (linear) that best approximates all the individual data points.","title":"Similar problems"},{"location":"#usage","text":"","title":"Usage"},{"location":"#project-layout","text":"\u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 Makefile <- Makefile with commands like `make data` or `make train` \u251c\u2500\u2500 README.md <- The top-level README for developers using this project. \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 external <- Data from third party sources. \u2502 \u251c\u2500\u2500 interim <- Intermediate data that has been transformed. \u2502 \u251c\u2500\u2500 processed <- The final, canonical data sets for modeling. \u2502 \u2514\u2500\u2500 raw <- The original, immutable data dump. \u2502 \u251c\u2500\u2500 docs <- Documentation of the project \u2502 \u251c\u2500\u2500 models <- Trained and serialized models, model predictions, or model summaries \u2502 \u251c\u2500\u2500 notebooks <- Jupyter notebooks. \u2502 \u251c\u2500\u2500 references <- Data dictionaries, manuals, and all other explanatory materials. \u2502 \u251c\u2500\u2500 reports <- Generated analysis as HTML, PDF, LaTeX, etc. \u2502 \u251c\u2500\u2500 figures <- Generated graphics and figures to be used in reporting \u2502 \u2514\u2500\u2500 tables <- Samples of data for documentation purposes. \u2502 \u251c\u2500\u2500 requirements.txt <- The requirements file for reproducing the analysis environment, e.g. \u2502 generated with `pip freeze > requirements.txt` \u2502 \u251c\u2500\u2500 setup.py <- makes project pip installable (pip install -e .) so src can be imported \u251c\u2500\u2500 src <- Source code for use in this project. \u2502 \u2502 \u2502 \u251c\u2500\u2500 data <- Scripts to download or generate data \u2502 \u2502 \u2502 \u251c\u2500\u2500 features <- Scripts to turn raw data into features for modeling \u2502 \u2502 \u2502 \u251c\u2500\u2500 models <- Scripts to train models and then use trained models to make predictions \u2502 \u2502 \u2502 \u2514\u2500\u2500 visualization <- Scripts to create exploratory and results oriented visualizations \u2502 \u2514\u2500\u2500 tox.ini <- tox file with settings for running tox; see tox.readthedocs.io","title":"Project layout"},{"location":"conclusion/","text":"Data sample Transformations Visualizations Training the model Model evaluation Improvements Final predictions","title":"Conclusion"},{"location":"conclusion/#data-sample","text":"","title":"Data sample"},{"location":"conclusion/#transformations","text":"","title":"Transformations"},{"location":"conclusion/#visualizations","text":"","title":"Visualizations"},{"location":"conclusion/#training-the-model","text":"","title":"Training the model"},{"location":"conclusion/#model-evaluation","text":"","title":"Model evaluation"},{"location":"conclusion/#improvements","text":"","title":"Improvements"},{"location":"conclusion/#final-predictions","text":"","title":"Final predictions"},{"location":"analytics/advanced-stats/","text":"Where are this type of analytics being used? These features are used in the Advanced Stats dataset Assumptions In this project I assume you have a basic notion of how basketball is played and what each feature means. This is only for clarification regarding abbreviations. Before reading these pages I suggest you to check the basic stats' explanation All this explanations are based on the preprocessed data. There are certain features that were added during preprocessing or raw data treatment. Features summary 3PAr : Percentage of field goals attempt from 3 point range Age : Average players age DRtg : Defensive Rating (available since the 1973-74 season in the NBA); for players and teams it is points allowed per 100 posessions. eFG%_defense : The statistic adjusts to the fact that a 3 point field goald is worth one more point that a 2 point field goal eFG%_offense : The statistic adjusts to the fact that a 3 point field goald is worth one more point that a 2 point field goal FT/FGA_defense : Defensive Free throw attempt rate; Number of FT per Goal Attempt in offense FT/FGA_offense : Offensive Free throw attempt rate; Number of FT per Goal Attempt in offense Ftr : Free throw attempt rate; Number of FT per Goal Attempt L : Number of losses in season MOV : Margin of victory NRtg : Estimate of point differential per 100 possesions ORB% : Defensive Rebound Percentage; An estimate of the percentage of available defensive rebounds a player grabbed while they were on the floor. ORB% : Offensive Rebound Percentage; An estimate of the percentage of available offensive rebounds a player grabbed while they were on the floor. ORtg : Offensive Rating (available since the 1977-78 season in the NBA); for players it is points produced per 100 posessions, while for teams it is points scored per 100 possessions Pace : Estimate of possesions per 48 minutes PL : Pythagorean losses; expected losses based on points scored and allowed PW : Pythagorean wins; expected wins based on points scored and allowed SOS : Strength of Schedule; a rating of strength of schedule. The rating is denominated in points above/below average, where zero is average. A positive number indicates a harder than average schedule SRS : Simple Rating System; a rating that takes into account average point differential and strength of schedule. The rating is denominated in points above/below average, where zero is average. TOV%_defense : Turnover percentage; An estimate of turnover commited per 100 plays. TOV%_offense : Turnover percentage; An estimate of turnover commited per 100 plays. TS% : True shooting percentage; A measure of shooting efficiency that takes into account 2-point field goals, 3-point field goals, and free throws W : Number of wins in season Extensive explanation of features 3PAr Age DRtg eFG%_defense eFG%_offense FT/FGA_defense FT/FGA_offense Ftr L MOV NRtg ORB% ORB% ORtg Pace PL PW SOS SRS TOV%_defense TOV%_offense TS% W","title":"Advanced stats"},{"location":"analytics/advanced-stats/#where-are-this-type-of-analytics-being-used","text":"These features are used in the Advanced Stats dataset","title":"Where are this type of analytics being used?"},{"location":"analytics/advanced-stats/#assumptions","text":"In this project I assume you have a basic notion of how basketball is played and what each feature means. This is only for clarification regarding abbreviations. Before reading these pages I suggest you to check the basic stats' explanation All this explanations are based on the preprocessed data. There are certain features that were added during preprocessing or raw data treatment.","title":"Assumptions"},{"location":"analytics/advanced-stats/#features-summary","text":"3PAr : Percentage of field goals attempt from 3 point range Age : Average players age DRtg : Defensive Rating (available since the 1973-74 season in the NBA); for players and teams it is points allowed per 100 posessions. eFG%_defense : The statistic adjusts to the fact that a 3 point field goald is worth one more point that a 2 point field goal eFG%_offense : The statistic adjusts to the fact that a 3 point field goald is worth one more point that a 2 point field goal FT/FGA_defense : Defensive Free throw attempt rate; Number of FT per Goal Attempt in offense FT/FGA_offense : Offensive Free throw attempt rate; Number of FT per Goal Attempt in offense Ftr : Free throw attempt rate; Number of FT per Goal Attempt L : Number of losses in season MOV : Margin of victory NRtg : Estimate of point differential per 100 possesions ORB% : Defensive Rebound Percentage; An estimate of the percentage of available defensive rebounds a player grabbed while they were on the floor. ORB% : Offensive Rebound Percentage; An estimate of the percentage of available offensive rebounds a player grabbed while they were on the floor. ORtg : Offensive Rating (available since the 1977-78 season in the NBA); for players it is points produced per 100 posessions, while for teams it is points scored per 100 possessions Pace : Estimate of possesions per 48 minutes PL : Pythagorean losses; expected losses based on points scored and allowed PW : Pythagorean wins; expected wins based on points scored and allowed SOS : Strength of Schedule; a rating of strength of schedule. The rating is denominated in points above/below average, where zero is average. A positive number indicates a harder than average schedule SRS : Simple Rating System; a rating that takes into account average point differential and strength of schedule. The rating is denominated in points above/below average, where zero is average. TOV%_defense : Turnover percentage; An estimate of turnover commited per 100 plays. TOV%_offense : Turnover percentage; An estimate of turnover commited per 100 plays. TS% : True shooting percentage; A measure of shooting efficiency that takes into account 2-point field goals, 3-point field goals, and free throws W : Number of wins in season","title":"Features summary"},{"location":"analytics/advanced-stats/#extensive-explanation-of-features","text":"","title":"Extensive explanation of features"},{"location":"analytics/advanced-stats/#3par","text":"","title":"3PAr"},{"location":"analytics/advanced-stats/#age","text":"","title":"Age"},{"location":"analytics/advanced-stats/#drtg","text":"","title":"DRtg"},{"location":"analytics/advanced-stats/#efg_defense","text":"","title":"eFG%_defense"},{"location":"analytics/advanced-stats/#efg_offense","text":"","title":"eFG%_offense"},{"location":"analytics/advanced-stats/#ftfga_defense","text":"","title":"FT/FGA_defense"},{"location":"analytics/advanced-stats/#ftfga_offense","text":"","title":"FT/FGA_offense"},{"location":"analytics/advanced-stats/#ftr","text":"","title":"Ftr"},{"location":"analytics/advanced-stats/#l","text":"","title":"L"},{"location":"analytics/advanced-stats/#mov","text":"","title":"MOV"},{"location":"analytics/advanced-stats/#nrtg","text":"","title":"NRtg"},{"location":"analytics/advanced-stats/#orb","text":"","title":"ORB%"},{"location":"analytics/advanced-stats/#orb_1","text":"","title":"ORB%"},{"location":"analytics/advanced-stats/#ortg","text":"","title":"ORtg"},{"location":"analytics/advanced-stats/#pace","text":"","title":"Pace"},{"location":"analytics/advanced-stats/#pl","text":"","title":"PL"},{"location":"analytics/advanced-stats/#pw","text":"","title":"PW"},{"location":"analytics/advanced-stats/#sos","text":"","title":"SOS"},{"location":"analytics/advanced-stats/#srs","text":"","title":"SRS"},{"location":"analytics/advanced-stats/#tov_defense","text":"","title":"TOV%_defense"},{"location":"analytics/advanced-stats/#tov_offense","text":"","title":"TOV%_offense"},{"location":"analytics/advanced-stats/#ts","text":"","title":"TS%"},{"location":"analytics/advanced-stats/#w","text":"","title":"W"},{"location":"analytics/basic-stats/","text":"Where are this type of analytics being used? These features are used in datasets: Per game stats dataset Per 100 possessions stats dataset Season total stats dataset Assumptions In this project I assume you have a basic notion of how basketball is played and what each feature means. This is only for clarification regarding abbreviations. For advanced stats I'll provide additional context. All this explanations are based on the preprocessed data. There are certain features that were added during preprocessing or raw data treatment. Features summary 2P% : 2-Point Field Goal Percentage 2P : 2-Point Field Goals 2PA : 2-point Field Goal Attempts 3P% : 3-Point Field Goal Percentage 3P : 3-Point Field Goals 3PA : 3-Point Field Goal Attempts AST : Assists BLK : Blocks DRB : Defensive Rebounds FG% : Field Goal Percentage FG : Field Goals FGA : Field Goal Attempts FT% : Free Throw Percentage FT : Free Throws FTA : Free Throw Attempts G : Games MP : Minutes Played ORB : Offensive Rebounds PF : Personal Fouls PTS : Points STL : Steals TOV : Turnovers TRB : Total Rebounds","title":"Basic stats"},{"location":"analytics/basic-stats/#where-are-this-type-of-analytics-being-used","text":"These features are used in datasets: Per game stats dataset Per 100 possessions stats dataset Season total stats dataset","title":"Where are this type of analytics being used?"},{"location":"analytics/basic-stats/#assumptions","text":"In this project I assume you have a basic notion of how basketball is played and what each feature means. This is only for clarification regarding abbreviations. For advanced stats I'll provide additional context. All this explanations are based on the preprocessed data. There are certain features that were added during preprocessing or raw data treatment.","title":"Assumptions"},{"location":"analytics/basic-stats/#features-summary","text":"2P% : 2-Point Field Goal Percentage 2P : 2-Point Field Goals 2PA : 2-point Field Goal Attempts 3P% : 3-Point Field Goal Percentage 3P : 3-Point Field Goals 3PA : 3-Point Field Goal Attempts AST : Assists BLK : Blocks DRB : Defensive Rebounds FG% : Field Goal Percentage FG : Field Goals FGA : Field Goal Attempts FT% : Free Throw Percentage FT : Free Throws FTA : Free Throw Attempts G : Games MP : Minutes Played ORB : Offensive Rebounds PF : Personal Fouls PTS : Points STL : Steals TOV : Turnovers TRB : Total Rebounds","title":"Features summary"},{"location":"data-states/external/","text":"","title":"External data"},{"location":"data-states/interim/","text":"","title":"Interim data"},{"location":"data-states/processed/","text":"","title":"Processed data"},{"location":"data-states/raw/","text":"","title":"Raw data"},{"location":"datasets/advanced/","text":"","title":"Advanced stats dataset"},{"location":"datasets/per-100-possesions/","text":"","title":"Per 100 possesions stats dataset"},{"location":"datasets/per-game/","text":"","title":"Per game stats dataset"},{"location":"datasets/season-totals/","text":"","title":"Season total stats dataset"},{"location":"reports/advanced/","text":"Data sample Transformations Visualizations Training the model Model evaluation Improvements Final predictions","title":"Predicting wins using advanced stats"},{"location":"reports/advanced/#data-sample","text":"","title":"Data sample"},{"location":"reports/advanced/#transformations","text":"","title":"Transformations"},{"location":"reports/advanced/#visualizations","text":"","title":"Visualizations"},{"location":"reports/advanced/#training-the-model","text":"","title":"Training the model"},{"location":"reports/advanced/#model-evaluation","text":"","title":"Model evaluation"},{"location":"reports/advanced/#improvements","text":"","title":"Improvements"},{"location":"reports/advanced/#final-predictions","text":"","title":"Final predictions"},{"location":"reports/per-100-possesions/","text":"Data sample Transformations Visualizations Training the model Model evaluation Improvements Final predictions","title":"Predicting wins using per 100 possesions stats"},{"location":"reports/per-100-possesions/#data-sample","text":"","title":"Data sample"},{"location":"reports/per-100-possesions/#transformations","text":"","title":"Transformations"},{"location":"reports/per-100-possesions/#visualizations","text":"","title":"Visualizations"},{"location":"reports/per-100-possesions/#training-the-model","text":"","title":"Training the model"},{"location":"reports/per-100-possesions/#model-evaluation","text":"","title":"Model evaluation"},{"location":"reports/per-100-possesions/#improvements","text":"","title":"Improvements"},{"location":"reports/per-100-possesions/#final-predictions","text":"","title":"Final predictions"},{"location":"reports/per-game/","text":"Data sample (5 random rows of pre-processed data) Team G MP FG FGA FG% 3P 3PA 3P% 2P 2PA 2P% FT FTA FT% ORB DRB TRB AST STL BLK TOV PF PTS Season Playoffs W L Milwaukee Bucks 82 241.2 36.1 80.2 0.450 4.0 11.3 0.351 32.2 69.0 0.467 21.0 27.2 0.772 12.0 29.3 41.3 21.0 6.5 3.5 13.8 21.9 97.2 2005 0 30.0 52.0 Minnesota Timberwolves 82 244.0 36.5 79.3 0.461 4.7 13.3 0.353 31.9 66.0 0.483 18.3 23.1 0.792 10.0 30.2 40.2 22.5 6.5 4.0 15.6 21.4 96.1 2007 0 32.0 50.0 Golden State Warriors 82 241.2 36.6 85.2 0.429 3.9 12.1 0.322 32.7 73.1 0.447 20.6 28.6 0.722 16.3 30.4 46.7 20.8 7.9 6.4 16.8 23.0 97.7 2002 0 21.0 61.0 San Antonio Spurs 82 242.1 40.4 82.5 0.490 2.9 8.4 0.341 37.5 74.0 0.507 21.9 28.6 0.765 11.2 31.0 42.2 24.5 7.1 6.3 15.0 22.5 105.5 1993 1 49.0 33.0 Phoenix Suns 82 241.5 36.6 82.6 0.443 4.8 14.0 0.343 31.8 68.6 0.464 17.4 23.5 0.742 12.8 29.8 42.5 21.0 8.1 4.9 14.7 22.0 95.5 2003 1 44.0 38.0 Transformations Visualizations Training the model Model evaluation Improvements Final predictions","title":"Predicting wins using per game stats"},{"location":"reports/per-game/#data-sample-5-random-rows-of-pre-processed-data","text":"Team G MP FG FGA FG% 3P 3PA 3P% 2P 2PA 2P% FT FTA FT% ORB DRB TRB AST STL BLK TOV PF PTS Season Playoffs W L Milwaukee Bucks 82 241.2 36.1 80.2 0.450 4.0 11.3 0.351 32.2 69.0 0.467 21.0 27.2 0.772 12.0 29.3 41.3 21.0 6.5 3.5 13.8 21.9 97.2 2005 0 30.0 52.0 Minnesota Timberwolves 82 244.0 36.5 79.3 0.461 4.7 13.3 0.353 31.9 66.0 0.483 18.3 23.1 0.792 10.0 30.2 40.2 22.5 6.5 4.0 15.6 21.4 96.1 2007 0 32.0 50.0 Golden State Warriors 82 241.2 36.6 85.2 0.429 3.9 12.1 0.322 32.7 73.1 0.447 20.6 28.6 0.722 16.3 30.4 46.7 20.8 7.9 6.4 16.8 23.0 97.7 2002 0 21.0 61.0 San Antonio Spurs 82 242.1 40.4 82.5 0.490 2.9 8.4 0.341 37.5 74.0 0.507 21.9 28.6 0.765 11.2 31.0 42.2 24.5 7.1 6.3 15.0 22.5 105.5 1993 1 49.0 33.0 Phoenix Suns 82 241.5 36.6 82.6 0.443 4.8 14.0 0.343 31.8 68.6 0.464 17.4 23.5 0.742 12.8 29.8 42.5 21.0 8.1 4.9 14.7 22.0 95.5 2003 1 44.0 38.0","title":"Data sample (5 random rows of pre-processed data)"},{"location":"reports/per-game/#transformations","text":"","title":"Transformations"},{"location":"reports/per-game/#visualizations","text":"","title":"Visualizations"},{"location":"reports/per-game/#training-the-model","text":"","title":"Training the model"},{"location":"reports/per-game/#model-evaluation","text":"","title":"Model evaluation"},{"location":"reports/per-game/#improvements","text":"","title":"Improvements"},{"location":"reports/per-game/#final-predictions","text":"","title":"Final predictions"},{"location":"reports/season-totals/","text":"Data sample Transformations Visualizations Training the model Model evaluation Improvements Final predictions","title":"Predicting wins using season total stats"},{"location":"reports/season-totals/#data-sample","text":"","title":"Data sample"},{"location":"reports/season-totals/#transformations","text":"","title":"Transformations"},{"location":"reports/season-totals/#visualizations","text":"","title":"Visualizations"},{"location":"reports/season-totals/#training-the-model","text":"","title":"Training the model"},{"location":"reports/season-totals/#model-evaluation","text":"","title":"Model evaluation"},{"location":"reports/season-totals/#improvements","text":"","title":"Improvements"},{"location":"reports/season-totals/#final-predictions","text":"","title":"Final predictions"}]}